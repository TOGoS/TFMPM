#!/bin/bash

set -euo pipefail

factorio_commit_ids=""
data_commit_ids=""
mapgen_seeds="1001 2001 3001 4001 5001"
map_scales="1 2 4 8"
map_gen_settings_files="/dev/null"
map_width=1024
map_offsets="0,0"
lazy_arg=--lazy

while [[ $# > 0 ]]
do
    key="$1"
    if [[ $key =~ --factorio-commit-id=(.*) ]] ; then
	factorio_commit_ids="${BASH_REMATCH[1]}"
    elif [[ $key =~ --not-lazy ]] ; then
	lazy_arg=""
    elif [[ $key =~ --data-commit-id=(.*) ]] ; then
	data_commit_ids="${BASH_REMATCH[1]}"
    elif [[ $key =~ --seed=(.*) ]] ; then
	mapgen_seeds="${BASH_REMATCH[1]}"
    elif [[ $key =~ --scale=(.*) ]] ; then
	map_scales="${BASH_REMATCH[1]}"
    elif [[ $key =~ --map-gen-settings-file=(.*) ]] ; then
	map_gen_settings_files="${BASH_REMATCH[1]}"
    elif [[ $key =~ --map-width=(.*) ]] ; then
	map_width="${BASH_REMATCH[1]}"
    elif [[ $key =~ --map-offset=(.*) ]] ; then
	map_offsets="${BASH_REMATCH[1]}"
    else
	echo "$0: Unrecognized argument: '$key'" >&2
	exit 1
    fi
    shift
done

if [ -z "$factorio_commit_ids" ] ; then
    echo "$0: Error: You must specify --factorio-commit-id=..." >&2
    exit 1
fi
if [ -z "$data_commit_ids" ] ; then
    data_commit_ids="$factorio_commit_ids"
fi

for fcommit in $factorio_commit_ids ; do
    for dcommit in $data_commit_ids ; do
	for mgs_file in $map_gen_settings_files ; do
	    for offset in $map_offsets ; do
		if [ $mgs_file == '/dev/null' ] ; then
		    mgs_arg=""
		else
		    mgs_arg="--map-gen-settings-file=$mgs_file"
		fi
		for seed in $mapgen_seeds ; do
		    for scale in $map_scales ; do
			util/generate-map-preview -v $lazy_arg \
						  --report-quantities=standard-stuff \
						  --factorio-commit-id=$fcommit \
						  ${mgs_arg} \
						  --data-commit-id=$dcommit \
						  --map-seed=$seed \
						  --map-scale=$scale \
						  --map-offset=$offset \
						  --map-width=$map_width
		    done
		done
	    done
	done
    done
done
