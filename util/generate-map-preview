#!/usr/bin/env php
<?php

$selfDir = dirname(__DIR__);
require_once "$selfDir/init-environment.php";
require_once "$selfDir/init-error-handling.php";

$MPM = $TFMPM_Registry->mapPreviewManager;

$options = array(
	'beLazy' => false,
	'verbosity' => 0
);
$params = $MPM->parseMapGenerationParamsFromCommandLine($argv, $options);

$selfGitDir = "$selfDir/.git";
$blobRepoDir = getenv('HOME')."/.ccouch";
$metalogDir = "$selfDir/logs";
if( !is_dir($metalogDir) ) mkdir($metalogDir, 0777, true);

$runner = $TFMPM_Registry->factorioRunner;
$systemUtil = $TFMPM_Registry->systemUtil;

if( $options['beLazy'] ) {
	$filters = array();
	foreach( $params as $k=>$v ) {
		if( $k == 'reportQuantities' ) continue; // Can't filter on that!
		$filters[$k] = array($v);
	}
	$maps = $TFMPM_Registry->mapModel->getMaps($filters);
	if( count($maps) > 0 ) {
		if( $options['verbosity'] >= 200 ) {
			fwrite(STDERR, "Skipping; already generated: ");
			fwrite(STDERR, json_encode($params,JSON_PRETTY_PRINT).": ");
			fwrite(STDERR, json_encode($maps,JSON_PRETTY_PRINT)."\n");
		} else if( $options['verbosity'] >= 100 ) {
			fwrite(STDERR, "Skipping; already generated!\n");
		}
		exit(0);
	}
}

$selfCommitId = $MPM->getTfmpmCommitId();

$metalogFile = $metalogDir."/".date('Y_m_d').".jsonl";
$systemUtil->mkparentDirs($metalogFile);

$startTime = date('c');
$result = $runner->generateMapPreview($params);
$endTime = date('c');
$metalogRecord = array(
	'startTime' => $startTime,
	'endTime' => $endTime,
	'tfmpmCommitId' => $selfCommitId,
	'generationParams' => $params,
	'generationResult' => $result,
);


// ".jsonl" extension as recommended by http://jsonlines.org/

$metalogStream = fopen( $metalogFile, "ab" );
fwrite($metalogStream, json_encode($metalogRecord)."\n");
fclose($metalogStream);

if( $options['verbosity'] >= 100 ) {
	echo json_encode($metalogRecord,JSON_PRETTY_PRINT), "\n";
}

$TFMPM_Registry->mapRecordInserter->open();
$TFMPM_Registry->mapRecordInserter->item($metalogRecord);
$TFMPM_Registry->mapRecordInserter->close();
