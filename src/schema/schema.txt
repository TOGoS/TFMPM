import 'http://ns.nuke24.net/Schema/comment'
import 'http://ns.nuke24.net/Schema/isNullable'
import 'http://ns.nuke24.net/Schema/defaultValue'
import 'http://ns.nuke24.net/Schema/valueType'
import 'http://ns.nuke24.net/Schema/longName'
import 'http://ns.nuke24.net/Schema/Functions/Unindent'
import 'http://ns.nuke24.net/Schema/Types/Number'
import 'http://ns.nuke24.net/Schema/DataTypeTranslation/sqlType'
import 'http://ns.nuke24.net/Schema/DataTypeTranslation/phpType'
import 'http://ns.nuke24.net/Schema/DataTypeTranslation/jsonType'
import 'http://ns.nuke24.net/Schema/DataTypeTranslation/regex'
import 'http://ns.nuke24.net/Schema/Application/hasADatabaseTable'
import 'http://ns.nuke24.net/Schema/Application/hasADatabaseColumn'
import 'http://ns.nuke24.net/Schema/Application/hasARestService'
import 'http://ns.nuke24.net/Schema/Application/membersArePublic'
import 'http://ns.nuke24.net/Schema/RDB/nameInDatabase'
import 'http://ns.nuke24.net/Schema/RDB/Schema'
import 'http://ns.nuke24.net/Schema/RDB/Sequence'
import 'http://ns.nuke24.net/Schema/RDB/initialValue'
import 'http://ns.nuke24.net/Schema/RDB/defaultValueSequence'
import 'http://ns.nuke24.net/Schema/RDB/isAutoIncremented'
import 'http://ns.nuke24.net/Schema/RDB/isInNamespace'
import 'http://ns.nuke24.net/Schema/RDB/isSelfKeyed'
import 'http://schema.org/True' as 'true'
import 'http://schema.org/False' as 'false'
import 'http://www.w3.org/2000/01/rdf-schema#isSubclassOf' as 'extends'

class 'integer' :
        SQL type @ "INT" :
        PHP type @ "int" : JSON type @ "number"
class 'unsigned integer' : extends(integer) :
	SQL type @ "INT UNSIGNED" : regex @ "\\d+"
class 'boolean' :
        SQL type @ "BOOLEAN" :
        PHP type @ "bool" : JSON type @ "boolean"
class 'string' :
        SQL type @ "VARCHAR(126)" :
        PHP type @ "string" : JSON type @ "string"
class 'normal ID' : extends(unsigned integer)
class 'entity ID' : extends(unsigned integer) : PHP type @ "string" : SQL type @ "BIGINT"
class 'code' : extends(string) : SQL type @ "CHAR(4)" : regex @ "[A-Za-z0-9 _-]{1,4}"
class 'text' : extends(string) : SQL type @ "TEXT"
class 'hash' : extends(string) : regex @ "[A-Fa-f0-9]{40}" : comment @ "Hex-encoded SHA-1 of something (40 bytes)"
class 'URI' : extends(string)
class 'Git commit ID' : extends(string)
class 'time interval' : extends(number) : SQL type @ "REAL" : comment @ "Number of seconds"
class 'time' : extends(string) : SQL type @ "TIMESTAMP"
class 'date' : extends(string) : SQL type @ "DATE"
class 'coordinate' : extends(string) : comment @ "Treated as strings of the form '<x>,<y>' or arrays of [x,y]"

class property 'collection name' : value type @ string :
	long name @ "http://ns.earthit.com/CMIPREST/collectionName" :
	comment @ "Name of the set of members of this class; usually this would be the plural form of the class name"

reference property 'inverse collection name': value type @ string :
	long name @ "http://ns.earthit.com/CMIPREST/inverseCollectionName"
reference property 'inverse name'            : value type @ string :
	long name @ "http://ns.earthit.com/CMIPREST/inverseName"

# TODO: Make these more officially part of the Schema/Application schema
class property 'records are immutable' : value type @ boolean :
	long name @ "http://ns.nuke24.net/Schema/Application/recordsAreImmutable" :
	comment @ "Indicates that records of this class are immutable, once written."
class property 'record set is immutable' : value type @ boolean :
	long name @ "http://ns.nuke24.net/Schema/Application/recordSetIsImmutable" :
	comment @ "Indicates that the set of records of this class is fixed as far as application code is concerned."
field property 'value is calculated' : value type @ boolean :
	long name @ "http://ns.nuke24.net/Schema/Application/valueIsCalculated" :
	comment @ "Indicates that the field's value is a function of other data, so cannot be edited directly."
field property 'uses user text canonicalization rules' :
	long name @ "http://ns.nuke24.net/Schema/Application/usesUserTextCanonicalizationRules" :
	comment @ "Means text is stored trimmed, and null when empty for nullable fields"
field property 'is content hash-based ID' :
	long name @ "http://ns.nuke24.net/Schema/RDB/isContentHashBasedId" :
	comment @ unindent @ «
		Applies to primary key fields whose value is calculated based on the primary content of the record,
		making the record by definition immutable.
		Mutable metadata (last access time, etc) may be stored
		with the record as long as not included with the hash.
	»

reference property 'indicates owner' :
	long name @ "http://ns.nuke24.net/Schema/Application/indicatesOwner" : comment @ unindent @ «
		The thing pointed to by this reference is the owns this object
		for permission checking purposes.
	»
reference property 'indicates ownee' :
	long name @ "http://ns.nuke24.net/Schema/Application/indicatesOwnee" : comment @ unindent @ «
		The thing pointed to by this reference is the owned by this object
		for permission checking purposes.
	»

field modifier UTCR = uses user text canonicalization rules

field property 'filterability' : string : long name @ "http://ns.nuke24.net/TFMPM/filterability"
field property 'included in basic info' : string : long name @ "http://ns.nuke24.net/TFMPM/includedInBasicInfo"

class 'map generation' {
	# Generation metadata
	generation ID : string
	TFMPM commit ID : Git commit ID : filterability @ "exact-match"
	generator node name : string : filterability @ "exact-match"

	# Input parameters
	factorio commit ID : Git commit ID : filterability @ "exact-match"
	data commit ID : Git commit ID : filterability @ "exact-match"
	map seed : integer : filterability @ "exact-match"
	map width : integer : filterability @ "exact-match"
	map scale : number : filterability @ "exact-match"
	map offset : has a database column @ false : coordinate : filterability @ "exact-match"
	map offset X : number
	map offset Y : number
	slope shading : number
	report quantities : text : included in basic info @ false

	# Outputs
	generation start time : time : filterability @ "time-range"
	generation end time : time : filterability @ "time-range"
	compilation reported elapsed time : time interval : nullable
	generation reported elapsed time : time interval : nullable
	map image URN : URI
	log file URN : URI
}

class 'map resource stats' {
	map generation : reference(map generation) : inverse collection name @ "map resource stats" {
		 generation ID
	}
	resource name : string
	total quantity : number
	average quantity : number : comment @ "average per tile (i.e. m²)"
	max unclamped probability : number
	max richness : number
	average richness : number
}
